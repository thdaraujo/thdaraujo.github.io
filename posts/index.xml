<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on thd.codes</title>
    <link>https://www.thd.codes/posts/</link>
    <description>Recent content in Posts on thd.codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Jun 2021 11:53:56 -0700</lastBuildDate><atom:link href="https://www.thd.codes/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Write a Clean Order By Case Query with Arel on Rails</title>
      <link>https://www.thd.codes/posts/how-to-write-order-by-case-query-with-arel/</link>
      <pubDate>Thu, 10 Jun 2021 11:53:56 -0700</pubDate>
      
      <guid>https://www.thd.codes/posts/how-to-write-order-by-case-query-with-arel/</guid>
      <description>You&amp;rsquo;re working on a feature and someone tells you that one of your models needs to be ordered based on some complicated rule. You realize you&amp;rsquo;ll need to write a complex order by query&amp;hellip;
Here&amp;rsquo;s how it usually goes:
 You think to yourself: &amp;ldquo;Should I write an order by case when statement? Maybe I&amp;rsquo;ll just add a little bit of SQL&amp;hellip;&amp;quot; Two minutes later, you end up with a bunch of nested case when statements, subqueries, table expressions, angry statements, shouting, and a whole lot of tears.</description>
    </item>
    
    <item>
      <title>What&#39;s the Best Way to Learn Webpack?</title>
      <link>https://www.thd.codes/posts/how-to-learn-webpack/</link>
      <pubDate>Sat, 05 Jun 2021 10:32:34 -0700</pubDate>
      
      <guid>https://www.thd.codes/posts/how-to-learn-webpack/</guid>
      <description>If you&amp;rsquo;re feeling lost whenever you have to add some javascript library to your Rails application, this post is for you!
I see a lot of people battling against Webpacker whenever they need to add a new javascript library or have to fix a bug on the asset pipeline. I suffered from the same problems, too. I talked about why this happens on a previous post:
&amp;ldquo;Adding Bootstrap or Javascript Sprinkles to Rails breaks everything.</description>
    </item>
    
    <item>
      <title>&#34;Adding Bootstrap or Javascript Sprinkles to Rails breaks everything. What should I do?&#34;</title>
      <link>https://www.thd.codes/posts/rails-and-webpack-pain/</link>
      <pubDate>Fri, 04 Jun 2021 10:32:34 -0700</pubDate>
      
      <guid>https://www.thd.codes/posts/rails-and-webpack-pain/</guid>
      <description>Did you spend a billion hours trying to add jQuery, or Bootstrap, or Tailwind to your Rails project, but now everything on the frontend is broken?
Or worse: you can&amp;rsquo;t even tell whether the frontend is broken or not. It&amp;rsquo;s in a unkown state of brokenness.
Should you just wait until an angry customer complains about the checkout button not working anymore to know which page to fix? Probably not!</description>
    </item>
    
    <item>
      <title>Move From Sprockets to Webpacker On Small to Large Rails Apps</title>
      <link>https://www.thd.codes/posts/from-sprockets-to-webpacker/</link>
      <pubDate>Mon, 24 May 2021 10:13:18 -0700</pubDate>
      
      <guid>https://www.thd.codes/posts/from-sprockets-to-webpacker/</guid>
      <description>Rails 6 comes with Sprockets and Webpacker by default. Confusing, right?
The default configuration is Webpacker for Javascript while Sprockets takes care of all the rest (CSS, images, fonts&amp;hellip;).
Let me tell you a secret: You don&amp;rsquo;t need both. Just use Webpacker.
 Legacy applications and older gems still use Sprockets to serve assets. This was done to add backwards compatibility. If you don&amp;rsquo;t have a good reason to keep Sprockets around, don&amp;rsquo;t.</description>
    </item>
    
    <item>
      <title>How to pick your first Rails Issue and start contributing to Open-Source</title>
      <link>https://www.thd.codes/posts/picking-a-rails-issue/</link>
      <pubDate>Wed, 12 May 2021 13:52:50 -0700</pubDate>
      
      <guid>https://www.thd.codes/posts/picking-a-rails-issue/</guid>
      <description>Did you always want to help an open-source project like Ruby on Rails, but never got started?
Many people have the interest of contributing to open-source, myself included. I&amp;rsquo;ve done a couple of small contributions, but nothing fancy.
It&amp;rsquo;s a little intimidating, right? You&amp;rsquo;re not part of the group of contributors and you don&amp;rsquo;t really know where to start. You see 800 open issues, but which one should you pick?</description>
    </item>
    
    <item>
      <title>How should I change production data on a new Rails application?</title>
      <link>https://www.thd.codes/posts/rails-data-migrations/</link>
      <pubDate>Tue, 13 Apr 2021 13:32:34 -0700</pubDate>
      
      <guid>https://www.thd.codes/posts/rails-data-migrations/</guid>
      <description>You need to change production data. You know that doing it manually is unsafe and will definetely cause lots of trouble, like corrupting all you customer&amp;rsquo;s data.
How else should you do it?
You might be spending a lot of time asking yourself these questions:
 Is there a proper rails way to change data in production? Should I run data and schema modifications in one database migration? Should I run rake scripts in production to modify data?</description>
    </item>
    
    <item>
      <title>hexdevs podcast</title>
      <link>https://www.thd.codes/posts/podcast/</link>
      <pubDate>Wed, 17 Jul 2019 20:33:52 -0700</pubDate>
      
      <guid>https://www.thd.codes/posts/podcast/</guid>
      <description>My wife and I are launching the greatest podcast in the world and a new site called hexdevs!
We&amp;rsquo;ll talk about how to start a business, and how to get better at your craft.
We want everyone to be more confident, successful, and smarter, so if you want to become an awesome dev, listen to our podcast and sign up for the mailing list!
And stay tuned!</description>
    </item>
    
    <item>
      <title>Generic JDBC Queries on EMR Zeppelin</title>
      <link>https://www.thd.codes/posts/jdbc-on-emr-zeppelin/</link>
      <pubDate>Wed, 03 Apr 2019 11:23:42 -0700</pubDate>
      
      <guid>https://www.thd.codes/posts/jdbc-on-emr-zeppelin/</guid>
      <description>The EMR (Elastic Map Reduce) service on Amazon has some nice packages that come pre-installed, and one of them is Apache Zeppelin, which is a Jupyter Notebook interface for Spark.
Zeppelin has interpreters for spark, pyspark, spark-sql and others, but if you want to run spark-sql code on a PostgreSQL database, you need first to install the JDBC interpreter and add some extra configuration to Zeppelin.
The JDBC adapter supports a wide variety of database engines, and it allows you to configure multiple database connections, which makes data exploration much easier.</description>
    </item>
    
    <item>
      <title>Fast ElasticSearch Indexing with Apache Spark on EMR (overview)</title>
      <link>https://www.thd.codes/posts/elasticsearch-indexing-with-spark-overview/</link>
      <pubDate>Thu, 06 Sep 2018 18:00:37 +0000</pubDate>
      
      <guid>https://www.thd.codes/posts/elasticsearch-indexing-with-spark-overview/</guid>
      <description>I&amp;rsquo;ve been building the data infrastructure for a project and I needed to efficiently query, merge, process and clean terabytes of structured data and then index hundreds of millions of documents on elasticsearch.
The problem is that querying and joining data on a RDBMS like Postgres is very painful when you have more than low terabytes of data. You&amp;rsquo;re going to spend a huge amount of time tuning your database, reading query plans, adding indexes, sharding, and slowly moving data around until you have something decent that take hours, days, maybe weeks to run.</description>
    </item>
    
    <item>
      <title>Machinations</title>
      <link>https://www.thd.codes/posts/machinations/</link>
      <pubDate>Thu, 06 Sep 2018 13:36:37 +0000</pubDate>
      
      <guid>https://www.thd.codes/posts/machinations/</guid>
      <description>An interesting quote about the unexpected effects of actions and the limitations of rationality and the planning fallacy:
 A net set up to catch fish may snare a duck; a mantis hunting an insect may itself be set upon by a sparrow.
  Machinations are hidden within machinations; changes arise beyond changes. So how can wit and cleverness be relied upon?
 &amp;ndash; Back to Beginnings, Reflections on the Tao by Huanchu Daoren, translated by Thomas Cleary.</description>
    </item>
    
    <item>
      <title>Collatz Conjecture</title>
      <link>https://www.thd.codes/posts/collatz-conjecture/</link>
      <pubDate>Thu, 15 Oct 2015 15:00:22 +0000</pubDate>
      
      <guid>https://www.thd.codes/posts/collatz-conjecture/</guid>
      <description>The Collatz Conjecture is a simple mathematical problem that still has no formal proof. So it&amp;rsquo;s an open problem.
This is how it works:
Choose any positive integer x. While x &amp;gt; 0, do: if x is even, divide it by 2 (x = x/2) if x is odd, multiply it by 3 and add 1 (x = 3x + 1) The Collatz Conjecture states that no matter what value of x you start with, the sequence will always reach x = 1.</description>
    </item>
    
    <item>
      <title>Two Quotes About Bureaucracy</title>
      <link>https://www.thd.codes/posts/two-quotes-about-bureaucracy/</link>
      <pubDate>Wed, 22 Apr 2015 15:34:39 +0000</pubDate>
      
      <guid>https://www.thd.codes/posts/two-quotes-about-bureaucracy/</guid>
      <description>I&amp;rsquo;ve been reading the book &amp;ldquo;The Utopia of Rules: On Technology, Stupidity, and the Secret Joys of Bureaucracy&amp;rdquo;, from David Graeber, and I want to share two interesting quotes about Bureaucracy:
 The body of officials actively engaged in a &amp;lsquo;public&amp;rsquo; office, along with the respective apparatus of material implements and the files, make up a &amp;lsquo;bureau.&amp;rsquo; In private enterprise, &amp;lsquo;the bureau&amp;rsquo; is often called &amp;lsquo;the office.&amp;rsquo; (&amp;hellip;) The idea that the bureau activities of the state are intrinsically different in character from the management of private economic offices is a continental European notion and, by way of contrast, is totally foreign to the American way.</description>
    </item>
    
  </channel>
</rss>
